spring.cloud.stream.bindings.receiveSensorData-in-0.destination=${KAFKA_SENSOR}
spring.cloud.stream.bindings.receiveSensorData-in-0.group=group-lack-detector

spring.cloud.stream.bindings.topic-1-1.destination=${KAFKA_NEW_ORDER}
spring.cloud.stream.bindings.topic-1-2.destination=${KAFKA_CHECK_ORDER}

server.port=0

spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.bootstrap-servers=localhost:9092

app.group-lack-detector.limit=${CONTAINER_THRESHOLD}

spring.cloud.config.enabled=false

#spring.datasource.url=jdbc:h2:file:./test
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true

spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
spring.datasource.username=postgres
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always