{"ast":null,"code":"var _jsxFileName = \"/home/a/Desktop/learn/project-x/frontend/src/components/Dashboard/LastOrders/LastOrders.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, LinearProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LastOrders() {\n  _s();\n  const orders = useSelector(state => state.orders);\n  React.useEffect(() => {\n    console.log(orders);\n  }, [orders]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"Last Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Spot/Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Dates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: sensor.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: sensor.container.product.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: sensor.container.product.capacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: sensor.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: sensor.container.product.measure.measureName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: getFillPercentage(Number(sensor.container.product.capacity), Number(sensor.quantity)),\n                style: {\n                  width: \"100%\"\n                },\n                color: getColor(Number(sensor.container.product.capacity), Number(sensor.quantity))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), `${getFillPercentage(Number(sensor.container.product.capacity), Number(sensor.quantity)).toFixed(0)}%`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, sensor.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(LastOrders, \"yWWCBvglnsRYS2sz5W3veMKgweg=\", false, function () {\n  return [useSelector];\n});\n_c = LastOrders;\nexport default LastOrders;\nvar _c;\n$RefreshReg$(_c, \"LastOrders\");","map":{"version":3,"names":["React","useSelector","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","LinearProgress","jsxDEV","_jsxDEV","LastOrders","_s","orders","state","useEffect","console","log","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","component","align","map","order","sensor","id","container","product","productName","capacity","quantity","measure","measureName","value","getFillPercentage","Number","style","width","color","getColor","toFixed","_c","$RefreshReg$"],"sources":["/home/a/Desktop/learn/project-x/frontend/src/components/Dashboard/LastOrders/LastOrders.tsx"],"sourcesContent":["import React from \"react\";\nimport { RootState } from \"../../../types/interfaces\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  LinearProgress,\n} from \"@mui/material\";\n\nfunction LastOrders() {\n  const orders = useSelector((state: RootState) => state.orders);\n\n  React.useEffect(() => {\n    console.log(orders);\n  }, [orders]);\n\n  return (\n    <div>\n      <Typography variant='h3'>Last Orders</Typography>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align='center'>Status</TableCell>\n              <TableCell align='center'>Spot/Name</TableCell>\n              <TableCell align='center'>Quantity</TableCell>\n              <TableCell align='center'>Dates</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <TableRow key={sensor.id}>\n                <TableCell align='center'>{sensor.id}</TableCell>\n                <TableCell align='center'>\n                  {sensor.container.product.productName}\n                </TableCell>\n                <TableCell align='center'>\n                  {sensor.container.product.capacity}\n                </TableCell>\n                <TableCell align='center'>{sensor.quantity}</TableCell>\n                <TableCell align='center'>\n                  {sensor.container.product.measure.measureName}\n                </TableCell>\n                <TableCell>\n                  <LinearProgress\n                    variant='determinate'\n                    value={getFillPercentage(\n                      Number(sensor.container.product.capacity),\n                      Number(sensor.quantity)\n                    )}\n                    style={{ width: \"100%\" }}\n                    color={getColor(\n                      Number(sensor.container.product.capacity),\n                      Number(sensor.quantity)\n                    )}\n                  />\n                  {`${getFillPercentage(\n                    Number(sensor.container.product.capacity),\n                    Number(sensor.quantity)\n                  ).toFixed(0)}%`}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default LastOrders;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}