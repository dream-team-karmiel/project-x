{"ast":null,"code":"var _jsxFileName = \"/home/a/Desktop/learn/project-x/frontend/src/components/Dashboard/BarChartSection/BarChartSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\n\n// import { RootState } from \"../../../types/types\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\nimport { Typography, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarChartSection() {\n  _s();\n  const orders = useSelector(state => state.orders);\n  const ordersByDate = orders.reduce((acc, order) => {\n    acc[order.creationDate] = (acc[order.creationDate] || 0) + 1;\n    return acc;\n  }, {});\n  const dataForBarChart = Object.keys(ordersByDate).map(date => ({\n    date,\n    orders: ordersByDate[date]\n  }));\n  useEffect(() => {\n    console.log(dataForBarChart);\n  }, [dataForBarChart]);\n\n  // const COLORS = [\"#FFBB28\", \"#0088FE\", \"#FF8042\", \"#00C49F\"];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Orders by Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: dataForBarChart,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"orders\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChartSection, \"yWWCBvglnsRYS2sz5W3veMKgweg=\", false, function () {\n  return [useSelector];\n});\n_c = BarChartSection;\nexport default BarChartSection;\nvar _c;\n$RefreshReg$(_c, \"BarChartSection\");","map":{"version":3,"names":["React","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Typography","Box","useSelector","jsxDEV","_jsxDEV","BarChartSection","_s","orders","state","ordersByDate","reduce","acc","order","creationDate","dataForBarChart","Object","keys","map","date","console","log","style","display","flexDirection","height","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","alignItems","width","data","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/home/a/Desktop/learn/project-x/frontend/src/components/Dashboard/BarChartSection/BarChartSection.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\n// import { RootState } from \"../../../types/types\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  CartesianGrid,\n} from \"recharts\";\n\nimport { RootState } from \"../../../types/interfaces\";\n\nimport { Typography, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\nimport { Order } from \"../../../types/types\";\n\nfunction BarChartSection() {\n  const orders = useSelector((state: RootState) => state.orders);\n\n  const ordersByDate = orders.reduce(\n    (acc: { [key: string]: number }, order: Order) => {\n      acc[order.creationDate] = (acc[order.creationDate] || 0) + 1;\n      return acc;\n    },\n    {}\n  );\n\n  const dataForBarChart = Object.keys(ordersByDate).map((date) => ({\n    date,\n    orders: ordersByDate[date],\n  }));\n\n  useEffect(() => {\n    console.log(dataForBarChart);\n  }, [dataForBarChart]);\n\n  // const COLORS = [\"#FFBB28\", \"#0088FE\", \"#FF8042\", \"#00C49F\"];\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n      <Typography variant='h3' align='center'>\n        Orders by Date\n      </Typography>\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'\n        height='100%'\n      >\n        <BarChart width={500} height={300} data={dataForBarChart}>\n          <CartesianGrid strokeDasharray='3 3' />\n          <XAxis dataKey='date' />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey='orders' fill='#8884d8' />\n        </BarChart>\n      </Box>\n    </div>\n  );\n}\n\nexport default BarChartSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}